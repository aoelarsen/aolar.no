---
import Header from '../components/Header.astro'
import Footer from '../components/Footer.astro'
import Repo from '../components/Repo.astro'
// You can import components from any supported Framework here!
// import ReactCounter from '../components/ReactCounter.jsx';

// Component Script:
// You can write any JavaScript/TypeScript that you'd like here.
// It will run during the build, but never in the browser.
// All variables are available to use in the HTML template below.
let title = 'AOLar.no - Frontend developer and bicycle mechanic';

const aolarnoRepo = await fetch('https://api.github.com/repos/aoelarsen/aolar.no').then(res => res.json().catch(err => console.log(err)))
const latestUpdate = new Date(aolarnoRepo.updated_at).toLocaleString()

---
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width">
    <title>{title}</title>

    <link rel="icon" type="image/x-icon" href="/favicon.ico" />
    
    <link rel="stylesheet" href="/style/global.css">
    <link rel="stylesheet" href="/style/home.css">

    <style>

    </style>
</head>
<body>
    <div class="page-wrap">
        <Header />
        <main>
            <section class="description__container big-component">
                <h2 class="description__heading">Frontend developer</h2>
                <p class="description__text"> &hellip; working as a bicycle&nbsp;mechanic</p>
            </section>
            <h3 class="big-component">The latest repositories I've been working on</h3>
            <section class="small-component">
                <Repo 
                    repoName={aolarnoRepo.name}
                    latestUpdate={latestUpdate}
                    description={aolarnoRepo.description}
                    language={aolarnoRepo.language}
                    githubLink={aolarnoRepo.html_url}
                />
            </section>
            <!--
            - You can also use imported framework components directly in your markup!
            -
            - Note: by default, these components are NOT interactive on the client.
            - The `:visible` directive tells Astro to make it interactive.
            -
            - See https://docs.astro.build/core-concepts/component-hydration/ 
            -->
            <!-- <ReactCounter client:visible /> -->
        </main>
        <Footer />
    </div> <!-- .page-wrap end -->

</body>
</html>
